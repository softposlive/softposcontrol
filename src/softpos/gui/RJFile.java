package softpos.gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import utilities.MySQLConnect;

public class RJFile extends javax.swing.JDialog {
    DefaultTableModel model2;
    static SimpleDateFormat Datefmtshow = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat DateTimeFmt = new SimpleDateFormat("dd/MM/yyyy (HH:mm)", Locale.ENGLISH);
    SimpleDateFormat SqlDateFmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat DateFmt = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat TimeFmt = new SimpleDateFormat("HH:mm", Locale.ENGLISH);
    SimpleDateFormat FileDateFmt = new SimpleDateFormat("yyyyMMdd", Locale.ENGLISH) ;
    SimpleDateFormat FullTimeFmt = new SimpleDateFormat("HH:mm:ss", Locale.ENGLISH);
    SimpleDateFormat ShortTimeFmt = new SimpleDateFormat("HH:mm", Locale.ENGLISH);

    public RJFile(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Font myfont = new Font("Norasi", Font.PLAIN, 14);
        UIManager.put("Label.font", myfont);
        UIManager.put("Button.font", myfont);
        model2 = (DefaultTableModel) ShowTableLogin.getModel();
        ShowTableLogin.setShowGrid(true);
        ShowTableLogin.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ShowTableLogin.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ShowTableLogin.setRowSelectionAllowed(true);
        ShowTableLogin.setShowHorizontalLines(true) ;
        ShowTableLogin.setShowVerticalLines(true) ;
        ShowTableLogin.setGridColor(Color.black);

        JTableHeader header = ShowTableLogin.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 16));

        int[] ColSize = {50,50, 300, 80, 80, 100, 100, 100, 100};
        for (int i = 0; i < 9; i++) {
            //int vColIndex = 0;
            TableColumn col = ShowTableLogin.getColumnModel().getColumn(i);
            col.setPreferredWidth(ColSize[i]);
        }
        
        DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
        DecimalFormat IntegerFmt = new DecimalFormat("##,###,##0");
        DecimalFormat PersentFmt = new DecimalFormat("#,##0.00%");

        TableColumnModel tcm = ShowTableLogin.getColumnModel();

        TableTestFormatRenderer r = new TableTestFormatRenderer(IntegerFmt);

        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(5).setCellRenderer(r);

        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(6).setCellRenderer(r);
        
        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(7).setCellRenderer(r);
        
        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(8).setCellRenderer(r);
        Date date = new Date() ;
        TDate1.setText(DateFmt.format(date)) ;
        TDate1.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void LoadDataToGrid() {
        PublicVar.TempDate = TDate1.getText() ;
        Date TempDate = new Date() ;
        try {
            TempDate = DateFmt.parse(TDate1.getText());
        } catch (ParseException ex) {
            Logger.getLogger(RJFile.class.getName()).log(Level.SEVERE, null, ex);
        }
        //LoadData To SurRj
        try {
            Statement stmt = (Statement) MySQLConnect.con.createStatement();
            String LoadTableFile = "select *from rjfile where tdate ='" + SqlDateFmt.format(TempDate) + "' order by rjno";
            ResultSet rec = stmt.executeQuery(LoadTableFile);
            rec.first();
            if (rec.getRow() == 0) {
                int RowCount = model2.getRowCount();
                for (int i = 0; i <= RowCount - 1; i++) {
                    model2.removeRow(0);
                }
            } else {
                do {
                    String XRJNo = rec.getString("rjno");
                    Double XSum1 = rec.getDouble("mac1");
                    Double XSum2 = rec.getDouble("mac2");
                    Double XSum3 = rec.getDouble("mac3");
                    Double XTotal = rec.getDouble("total");

                    UpdateSurRj(XRJNo, XSum1, XSum2, XSum3, XTotal);
                } while (rec.next());
                try {
                    Statement stmt2 = (Statement) MySQLConnect.con.createStatement();
                    String LoadTableFile2 = "select *from surrj order by rjline";
                    ResultSet rec2 = stmt.executeQuery(LoadTableFile2);
                    Date dt = new Date();
                    int RowCount = model2.getRowCount();
                    for (int i = 0; i <= RowCount - 1; i++) {
                        model2.removeRow(0);
                    }
                    rec2.first();
                    if (rec2.getRow() == 0) {
                    } else {
                        do {
                            //JOptionPane.showMessageDialog(this, rec2.getInt("rjline"))  ;
                            Object[] input = {
                                rec2.getString("rjno"),
                                rec2.getString("dept"),
                                rec2.getString("tdesc"),
                                rec2.getString("account"),
                                rec2.getString("sub"),
                                rec2.getDouble("mac1"),
                                rec2.getDouble("mac2"),
                                rec2.getDouble("mac3"),
                                rec2.getDouble("gosstotal"),
                            };
                            model2.addRow(input);
                        } while (rec2.next());
                        RowCount = model2.getRowCount();
                        showCell(0, 0);
                    }
                    rec2.close();
                    stmt2.close();
                } catch (SQLException e) {
                    PUtility.ShowError(e.getMessage());
                }
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            PUtility.ShowError(e.getMessage());
        }
        
    }
    public void UpdateSurRj(String TRjNo, Double TAmt1, Double TAmt2, Double TAmt3,Double TTotal) {
        try {
            Statement stmt = (Statement) MySQLConnect.con.createStatement();
            String InsertQuery = "update surrj set mac1=?,mac2=?,mac3=?,gosstotal=? where rjno=? " ;
            PreparedStatement prm = (PreparedStatement) MySQLConnect.con.prepareStatement(InsertQuery);
            prm.setDouble(1, TAmt1);
            prm.setDouble(2, TAmt2);
            prm.setDouble(3, TAmt3);
            prm.setDouble(4, TTotal) ;
            prm.setString(5, TRjNo);
            prm.executeUpdate();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    public void showCell(int row, int column) {
        Rectangle rect = ShowTableLogin.getCellRect(row, column, true);
        ShowTableLogin.scrollRectToVisible(rect);
        ShowTableLogin.clearSelection();
        ShowTableLogin.setRowSelectionInterval(row, row);
    }

    public int GetSelectedRow() {
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = ShowTableLogin.getRowCount();
        if (maxrow > 0) {
            for (int i = 0; i < maxrow; i++) {
                if (ShowTableLogin.isRowSelected(i)) {
                    currow = i;
                }
            }
            TableSelected = ShowTableLogin.getValueAt(currow, 0).toString();
            
        } else {
        }
        return currow ;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TDate1 = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmdDateChoose2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowTableLogin = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel1.setText("ประจำวันที่ ");

        TDate1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        TDate1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        TDate1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TDate1FocusLost(evt);
            }
        });
        TDate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TDate1KeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton1.setText("บันทึก Payment");
        jButton1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton2.setText("พิมพ์ (Print)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton3.setText("ESC-ออก (Exit)");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton3MouseReleased(evt);
            }
        });

        jPanel2.setBackground(java.awt.Color.white);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setForeground(new java.awt.Color(241, 30, 11));

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(245, 18, 18));
        jLabel2.setText("บันทึกรายการรับจ่าย RJ-File");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2)
        );

        cmdDateChoose2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose2.setFocusable(false);
        cmdDateChoose2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(TDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(TDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        ShowTableLogin.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        ShowTableLogin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RJNO", "แผนก", "รายการ (Description)", "Account", "Sub", "เครื่อง 1", "เครื่อง 2", "เครื่อง 3", "รวมทุกเครื่อง"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ShowTableLogin.setOpaque(false);
        ShowTableLogin.setRowHeight(25);
        ShowTableLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ShowTableLoginKeyPressed(evt);
            }
        });
        ShowTableLogin.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                ShowTableLoginVetoableChange(evt);
            }
        });
        jScrollPane1.setViewportView(ShowTableLogin);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1024, 768));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void TDate1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TDate1FocusLost
   LoadDataToGrid() ;
}//GEN-LAST:event_TDate1FocusLost

private void ShowTableLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ShowTableLoginKeyPressed
    //int SelectedRow = GetSelectedRow() ;
    //if (ShowTableLogin.getValueAt(SelectedRow, 0).equals("T0")) {
    //      ShowTableLogin.enableInputMethods(true);
    //} else {
    //    ShowTableLogin.enableInputMethods(false);
    //    
   // }
}//GEN-LAST:event_ShowTableLoginKeyPressed

private void ShowTableLoginVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_ShowTableLoginVetoableChange
    
}//GEN-LAST:event_ShowTableLoginVetoableChange

private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
    int GridRow = ShowTableLogin.getRowCount() ;
    if (GridRow>0) {
       InputPay() ;
    }
    
}//GEN-LAST:event_jButton1MouseReleased

private void TDate1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TDate1KeyPressed
    if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
       ShowTableLogin.requestFocus();
    } else 
    if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
        this.dispose();
    }
}//GEN-LAST:event_TDate1KeyPressed

private void jButton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseReleased
   this.dispose();
}//GEN-LAST:event_jButton3MouseReleased

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    int RowCount = model2.getRowCount();
    if(RowCount>0){
        ViewReport view = new ViewReport();
        view.printReportRJ(TDate1.getText()); 
    }
}//GEN-LAST:event_jButton2ActionPerformed

private void cmdDateChoose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose2ActionPerformed
// TODO add your handling code here:
    java.awt.Point point = cmdDateChoose2.getLocation();
    point.setLocation(point.getX(), point.getY());
    utilities.DateChooser.DateChooseDialog dcd = new utilities.DateChooser.DateChooseDialog(new java.awt.Frame(), true, point);
    dcd.setVisible(true);
    // dcd.showDialog(new LookAndFeelFrame(), true, point);
    if (dcd.getSelectDate() != null) {
        TDate1.setText(DateFmt.format(dcd.getSelectDate().getTime()));
    }
    TDate1.requestFocus();
}//GEN-LAST:event_cmdDateChoose2ActionPerformed
public void InputPay() {
    Date RjDate = new Date() ;
        try {
            RjDate = DateFmt.parse(TDate1.getText());
        } catch (ParseException ex) {
            Logger.getLogger(RJFile.class.getName()).log(Level.SEVERE, null, ex);
        }
    InputPayment frm = new InputPayment(null,true);
    frm.setVisible(true);
    LoadDataToGrid() ;
}
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RJFile dialog = new RJFile(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ShowTableLogin;
    private javax.swing.JFormattedTextField TDate1;
    private javax.swing.JButton cmdDateChoose2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    public class TableTestFormatRenderer extends DefaultTableCellRenderer {

        private Format formatter;

        public TableTestFormatRenderer(Format formatter) {
            if (formatter == null) {
                throw new NullPointerException();
            }
            this.formatter = formatter;
        }

        protected void setValue(Object obj) {
            setText(obj == null ? "" : formatter.format(obj));
        }
    }
}
