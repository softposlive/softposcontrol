/*
 * backupSetting.java
 *
 * Created on July 30, 2009, 10:38 AM
 */
package backuprestoredb;

import java.awt.Color;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import utilities.Directory_Files_Controller;
import utilities.MySQLConnect;

/**
 *
 * @author  root
 */
public class backupSetting extends javax.swing.JDialog {

    /** Creates new form backupSetting */
    private String dayOfbackup = "0";
    private String getDay = "30";
    // private File path = new File("/spapplication/backupdatabase/dateOfBackup");
    // private String pathDayof = "/spapplication/backupdatabase/dateOfBackup/dateOfBackup.log";
    SimpleDateFormat dateFmtShow = new SimpleDateFormat("dd-MM-yyyy", Locale.ENGLISH);

    public backupSetting(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (Exception e) {
            e.printStackTrace();
        }

        initComponents();
        pathFileUtility uti = new pathFileUtility();
        uti.getPathFileConfig();
        onFromLoad();
        jLabel3.setText("");
        txtdate.setText(dayOfbackup);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtdate = new javax.swing.JFormattedTextField();
        btn_Ok = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("กำหนดวันสำหรับการสำรองข้อมูล");
        setBackground(new java.awt.Color(197, 193, 193));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 14));
        jLabel1.setText("ระบุจำนวนที่ต้องการสำรองข้อมูล");

        txtdate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtdate.setText("0");
        txtdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdateKeyReleased(evt);
            }
        });

        btn_Ok.setFont(new java.awt.Font("Norasi", 0, 14));
        btn_Ok.setText("ตกลง");
        btn_Ok.setBorder(null);
        btn_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_OkActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Norasi", 0, 14));
        jButton2.setText("ยกเลิก");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add record.gif"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Norasi", 0, 13));
        jLabel3.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-327)/2, (screenSize.height-148)/2, 327, 148);
    }// </editor-fold>//GEN-END:initComponents

private void btn_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_OkActionPerformed
// TODO add your handling code here:
    try {
        int number = Integer.parseInt(txtdate.getText());
        if (number > 0) {
            dayOfbackup = txtdate.getText();
            TextWrite txt = new TextWrite();
            File ch = new File(pathFileUtility.pathDateConfig + "/dateOfBackup.ini");
            if (ch.exists()) {
                ch.delete();

            }
            File write = new File(pathFileUtility.pathDateConfig);
            txt.writeToText(write.getPath() + "/dateOfBackup.ini", dayOfbackup);
            checkRemoveFileOverfig(number);
            dispose();
        } else {
            txtdate.selectAll();
            jLabel3.setText("จำนวนวันไม่ถูกต้อง");
            jLabel3.setForeground(Color.RED);
        }

    } catch (Exception e) {
        txtdate.selectAll();
        jLabel3.setText("จำนวนวันไม่ถูกต้อง");
        jLabel3.setForeground(Color.RED);
    }

}//GEN-LAST:event_btn_OkActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    dispose();
}//GEN-LAST:event_jButton2ActionPerformed

private void txtdateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdateKeyReleased
// TODO add your handling code here:
    if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
        if (txtdate.getText().trim().length() > 0) {
            btn_OkActionPerformed(null);
        }
    }
}//GEN-LAST:event_txtdateKeyReleased
    private void checkRemoveFileOverfig(int number) {
        MySQLConnect db = new MySQLConnect();
        db.getDbVar();
        String dbName = MySQLConnect.DbName;

        int input = Integer.parseInt(txtdate.getText());
        int log = Integer.parseInt(getDay);
        if (input < log) {//กำหนดใหม่น้อยกว่าที่ถูกกำหนดไว้แล้วต้องลบอันเก่าที่เกินออก

            File path = new File(pathFileUtility.pathBackUp + dbName + "");
            List fileName = new ArrayList();
            File fi = new File(path.getPath());
            File fl[] = fi.listFiles();
            int del = 0;
            int has = checkMaxFile(path);
            del = has - input;
            if (del > 0) {
                for (File check : fl) {//count file

                    if (check.isFile() && !check.isHidden()) {
                        System.out.println(check);
                        fileName.add(check);
                    }
                }
                // sort data
                int n = fileName.size();
                Date[] sort = new Date[n];
                for (int i = 0; i < n; i++) {
                    String date = fileName.get(i).toString().trim();
                    date = date.substring(date.length() - 14, date.length() - 4);
                    try {
                        sort[i] = dateFmtShow.parse(date);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                int id = 0;
                for (int i = 0; i < n - 1; i++) {
                    Date min = sort[i];
                    for (int j = i + 1; j < n; j++) {
                        if (sort[j].compareTo(min) < 0) {
                            min = sort[j];
                            id = j;
                        }
                    }
                    Date temp = sort[i];
                    sort[i] = sort[id];
                    sort[id] = temp;
                }

                for (int i = 0; i < sort.length; i++) {
                    System.out.println("date sort :" + dateFmtShow.format(sort[i]));
                }
                // Collections.sort(fileName);


                for (int i = 0; i < del; i++) {
                    File remove = new File(path.getPath() + "/" + dbName + "_" + dateFmtShow.format(sort[i]) + ".sql");
                    System.out.println("pathremove :" + remove);
                    remove.delete();

                }
            }

        }
    }

    private int checkMaxFile(File path) {
        System.out.println("path max " + path);
        File fi = new File(path.getPath());
        File fl[] = fi.listFiles();
        int countFiles = 0;
        for (File check : fl) {//count file

            if (check.isFile() && !check.isHidden()) {
                countFiles += 1;
            }
        }
        return countFiles;

    }

    private void onFromLoad() {
        File file = new File(pathFileUtility.pathDateConfig + "dateOfBackup.ini");
        if (file.exists()) {
            Directory_Files_Controller ctrl = new Directory_Files_Controller();
            dayOfbackup = ctrl.ReadLogFile(file.toString());
            getDay = dayOfbackup;
            txtdate.setText(getDay);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                backupSetting dialog = new backupSetting(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Ok;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JFormattedTextField txtdate;
    // End of variables declaration//GEN-END:variables

    public String getDateOfBackup() {
        return dayOfbackup;
    }
}
